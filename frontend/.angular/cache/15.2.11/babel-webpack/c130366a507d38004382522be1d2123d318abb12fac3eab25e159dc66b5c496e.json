{"ast":null,"code":"import { io } from 'socket.io-client';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction GameComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.makeMove(i_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r2 = ctx.$implicit;\n    i0.ɵɵclassProp(\"x\", cell_r2 === \"X\")(\"o\", cell_r2 === \"O\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r2, \" \");\n  }\n}\nfunction GameComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function GameComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.restartGame());\n    });\n    i0.ɵɵtext(1, \" Restart Game \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class GameComponent {\n  constructor() {\n    this.board = Array(9).fill(null);\n    this.currentPlayer = 'X';\n    this.gameId = 'game1';\n    this.gameStatus = 'Waiting for players...';\n    this.isGameOver = false;\n    this.winner = null;\n    this.socket = io('http://localhost:3000', {\n      withCredentials: true,\n      transports: ['polling', 'websocket'],\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    this.setupSocketListeners();\n  }\n  ngOnInit() {\n    this.joinGame();\n  }\n  ngOnDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n  setupSocketListeners() {\n    this.socket.on('connect', () => {\n      console.log('Connected to server');\n      this.gameStatus = 'Connected to game server';\n    });\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      this.gameStatus = 'Disconnected from game server';\n    });\n    this.socket.on('gameState', gameState => {\n      console.log('Received game state:', gameState);\n      this.board = gameState.board;\n      this.currentPlayer = gameState.currentTurn;\n      this.gameStatus = `Current turn: ${gameState.currentTurn}`;\n    });\n    this.socket.on('gameOver', data => {\n      this.isGameOver = true;\n      this.winner = data.winner;\n      this.gameStatus = data.winner ? `Game Over! Winner: ${data.winner}` : 'Game Over! It\\'s a draw!';\n    });\n    this.socket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      this.gameStatus = 'Connection error. Retrying...';\n    });\n  }\n  joinGame() {\n    const player = Math.random() < 0.5 ? 'X' : 'O';\n    this.socket.emit('joinGame', {\n      gameId: this.gameId,\n      player\n    });\n  }\n  makeMove(index) {\n    if (!this.isGameOver && this.board[index] === null) {\n      this.socket.emit('makeMove', {\n        gameId: this.gameId,\n        index: index,\n        player: this.currentPlayer\n      });\n    }\n  }\n  restartGame() {\n    this.board = Array(9).fill(null);\n    this.isGameOver = false;\n    this.winner = null;\n    this.joinGame();\n  }\n}\nGameComponent.ɵfac = function GameComponent_Factory(t) {\n  return new (t || GameComponent)();\n};\nGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameComponent,\n  selectors: [[\"app-game\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"game-container\"], [1, \"game-status\"], [1, \"game-board\"], [\"class\", \"cell\", 3, \"x\", \"o\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"restart-button\", 3, \"click\", 4, \"ngIf\"], [1, \"cell\", 3, \"click\"], [1, \"restart-button\", 3, \"click\"]],\n  template: function GameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, GameComponent_div_4_Template, 2, 5, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, GameComponent_button_5_Template, 2, 0, \"button\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.gameStatus);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.board);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isGameOver);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\".game-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 20px;\\n}\\n\\n.game-status[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  font-size: 1.5em;\\n  color: #333;\\n}\\n\\n.game-board[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  gap: 5px;\\n  background-color: #333;\\n  padding: 5px;\\n  border-radius: 10px;\\n}\\n\\n.cell[_ngcontent-%COMP%] {\\n  width: 100px;\\n  height: 100px;\\n  background-color: white;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-size: 2em;\\n  font-weight: bold;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\n.cell[_ngcontent-%COMP%]:hover {\\n  background-color: #f0f0f0;\\n}\\n\\n.cell.x[_ngcontent-%COMP%] {\\n  color: #ff4081;\\n}\\n\\n.cell.o[_ngcontent-%COMP%] {\\n  color: #2196f3;\\n}\\n\\n.restart-button[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  padding: 10px 20px;\\n  font-size: 1.2em;\\n  background-color: #4CAF50;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\n.restart-button[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixxQ0FBcUM7RUFDckMsUUFBUTtFQUNSLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5nYW1lLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5nYW1lLXN0YXR1cyB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIGNvbG9yOiAjMzMzO1xufVxuXG4uZ2FtZS1ib2FyZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XG4gIGdhcDogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICBwYWRkaW5nOiA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5jZWxsIHtcbiAgd2lkdGg6IDEwMHB4O1xuICBoZWlnaHQ6IDEwMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG59XG5cbi5jZWxsOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbn1cblxuLmNlbGwueCB7XG4gIGNvbG9yOiAjZmY0MDgxO1xufVxuXG4uY2VsbC5vIHtcbiAgY29sb3I6ICMyMTk2ZjM7XG59XG5cbi5yZXN0YXJ0LWJ1dHRvbiB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgZm9udC1zaXplOiAxLjJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDtcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG59XG5cbi5yZXN0YXJ0LWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XG59ICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["io","i0","GameComponent","constructor","Array","fill","socket","withCredentials","transports","reconnectionAttempts","reconnectionDelay","setupSocketListeners","ngOnInit","joinGame","ngOnDestroy","disconnect","on","console","log","gameStatus","gameState","board","currentPlayer","currentTurn","data","isGameOver","winner","error","player","Math","random","emit","gameId","makeMove","index","restartGame","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/chamma/Desktop/tic-tac-toe-game/frontend/src/app/game/game.component.ts","/Users/chamma/Desktop/tic-tac-toe-game/frontend/src/app/game/game.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { io } from 'socket.io-client';\nimport type { Socket } from 'socket.io-client';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit, OnDestroy {\n  private socket: Socket;\n  board: (string | null)[] = Array(9).fill(null);\n  currentPlayer: string = 'X';\n  gameId: string = 'game1';\n  gameStatus: string = 'Waiting for players...';\n  isGameOver: boolean = false;\n  winner: string | null = null;\n\n  constructor() {\n    this.socket = io('http://localhost:3000', {\n      withCredentials: true,\n      transports: ['polling', 'websocket'],\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n\n    this.setupSocketListeners();\n  }\n\n  ngOnInit(): void {\n    this.joinGame();\n  }\n\n  ngOnDestroy(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n\n  private setupSocketListeners(): void {\n    this.socket.on('connect', () => {\n      console.log('Connected to server');\n      this.gameStatus = 'Connected to game server';\n    });\n\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      this.gameStatus = 'Disconnected from game server';\n    });\n\n    this.socket.on('gameState', (gameState: any) => {\n      console.log('Received game state:', gameState);\n      this.board = gameState.board;\n      this.currentPlayer = gameState.currentTurn;\n      this.gameStatus = `Current turn: ${gameState.currentTurn}`;\n    });\n\n    this.socket.on('gameOver', (data: { winner: string | null }) => {\n      this.isGameOver = true;\n      this.winner = data.winner;\n      this.gameStatus = data.winner ? `Game Over! Winner: ${data.winner}` : 'Game Over! It\\'s a draw!';\n    });\n\n    this.socket.on('connect_error', (error: Error) => {\n      console.error('Connection error:', error);\n      this.gameStatus = 'Connection error. Retrying...';\n    });\n  }\n\n  private joinGame(): void {\n    const player = Math.random() < 0.5 ? 'X' : 'O';\n    this.socket.emit('joinGame', { gameId: this.gameId, player });\n  }\n\n  makeMove(index: number): void {\n    if (!this.isGameOver && this.board[index] === null) {\n      this.socket.emit('makeMove', {\n        gameId: this.gameId,\n        index: index,\n        player: this.currentPlayer\n      });\n    }\n  }\n\n  restartGame(): void {\n    this.board = Array(9).fill(null);\n    this.isGameOver = false;\n    this.winner = null;\n    this.joinGame();\n  }\n} ","<div class=\"game-container\">\n  <h2 class=\"game-status\">{{ gameStatus }}</h2>\n  \n  <div class=\"game-board\">\n    <div *ngFor=\"let cell of board; let i = index\" \n         class=\"cell\"\n         [class.x]=\"cell === 'X'\"\n         [class.o]=\"cell === 'O'\"\n         (click)=\"makeMove(i)\">\n      {{ cell }}\n    </div>\n  </div>\n\n  <button *ngIf=\"isGameOver\" \n          class=\"restart-button\"\n          (click)=\"restartGame()\">\n    Restart Game\n  </button>\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}