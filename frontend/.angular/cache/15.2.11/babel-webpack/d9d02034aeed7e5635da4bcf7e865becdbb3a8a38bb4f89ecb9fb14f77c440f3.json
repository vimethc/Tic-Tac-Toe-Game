{"ast":null,"code":"import * as socketIo from 'socket.io-client';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction GameComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_9_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.makeMove(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"x\", cell_r1 === \"X\")(\"o\", cell_r1 === \"O\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r1, \" \");\n  }\n}\nexport class GameComponent {\n  constructor() {\n    this.board = Array(9).fill(null);\n    this.player = '';\n    this.currentTurn = 'X';\n    this.gameId = 'game1';\n    this.status = '';\n    this.isGameOver = false;\n    this.socket = socketIo.connect('http://localhost:3000', {\n      transports: ['websocket'],\n      cors: {\n        origin: '*'\n      }\n    });\n    this.player = Math.random() < 0.5 ? 'X' : 'O';\n  }\n  ngOnInit() {\n    this.socket.emit('joinGame', {\n      gameId: this.gameId,\n      player: this.player\n    });\n    this.updateStatus();\n    this.socket.on('gameState', gameState => {\n      this.board = gameState.board;\n      this.currentTurn = gameState.currentTurn;\n      this.updateStatus();\n    });\n    this.socket.on('gameOver', data => {\n      this.isGameOver = true;\n      if (data.winner) {\n        this.status = data.winner === this.player ? 'You won!' : 'You lost!';\n      } else {\n        this.status = \"It's a draw!\";\n      }\n      // Reset after 2 seconds\n      setTimeout(() => {\n        this.isGameOver = false;\n        this.board = Array(9).fill(null);\n        this.currentTurn = 'X';\n        this.updateStatus();\n      }, 2000);\n    });\n  }\n  updateStatus() {\n    if (!this.isGameOver) {\n      this.status = this.currentTurn === this.player ? 'Your turn!' : \"Opponent's turn!\";\n    }\n  }\n  makeMove(index) {\n    if (this.currentTurn === this.player && this.board[index] === null && !this.isGameOver) {\n      this.socket.emit('makeMove', {\n        gameId: this.gameId,\n        index: index,\n        player: this.player\n      });\n    }\n  }\n  ngOnDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n}\nGameComponent.ɵfac = function GameComponent_Factory(t) {\n  return new (t || GameComponent)();\n};\nGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameComponent,\n  selectors: [[\"app-game\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[1, \"game-container\"], [1, \"player-info\"], [1, \"board\"], [\"class\", \"cell\", 3, \"x\", \"o\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"cell\", 3, \"click\"]],\n  template: function GameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Tic Tac Toe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2);\n      i0.ɵɵtemplate(9, GameComponent_div_9_Template, 2, 5, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"You are player: \", ctx.player, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Current turn: \", ctx.currentTurn, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.board);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\".game-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 20px;\\n}\\n\\n.player-info[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  text-align: center;\\n}\\n\\n.board[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  gap: 5px;\\n  width: 300px;\\n  height: 300px;\\n  background-color: #34495e;\\n  padding: 10px;\\n  border-radius: 10px;\\n}\\n\\n.cell[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 40px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  border-radius: 5px;\\n  transition: background-color 0.3s;\\n}\\n\\n.cell[_ngcontent-%COMP%]:hover {\\n  background-color: #f0f0f0;\\n}\\n\\n.cell.x[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n}\\n\\n.cell.o[_ngcontent-%COMP%] {\\n  color: #3498db;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHFDQUFxQztFQUNyQyxRQUFRO0VBQ1IsWUFBWTtFQUNaLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuZ2FtZS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG4ucGxheWVyLWluZm8ge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5ib2FyZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XG4gIGdhcDogNXB4O1xuICB3aWR0aDogMzAwcHg7XG4gIGhlaWdodDogMzAwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDQ5NWU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5jZWxsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG59XG5cbi5jZWxsOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbn1cblxuLmNlbGwueCB7XG4gIGNvbG9yOiAjZTc0YzNjO1xufVxuXG4uY2VsbC5vIHtcbiAgY29sb3I6ICMzNDk4ZGI7XG59ICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["socketIo","i0","GameComponent","constructor","Array","fill","socket","connect","transports","cors","origin","player","Math","random","ngOnInit","emit","gameId","updateStatus","on","gameState","board","currentTurn","data","isGameOver","winner","status","setTimeout","makeMove","index","ngOnDestroy","disconnect","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/chamma/Desktop/tic-tac-toe-game/frontend/src/app/game/game.component.ts","/Users/chamma/Desktop/tic-tac-toe-game/frontend/src/app/game/game.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport * as socketIo from 'socket.io-client';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit, OnDestroy {\n  private socket: any;\n  public board: string[] = Array(9).fill(null);\n  public player: string = '';\n  public currentTurn: string = 'X';\n  public gameId: string = 'game1';\n  status: string = '';\n  isGameOver: boolean = false;\n\n  constructor() {\n    this.socket = socketIo.connect('http://localhost:3000', {\n      transports: ['websocket'],\n      cors: {\n        origin: '*'\n      }\n    });\n    this.player = Math.random() < 0.5 ? 'X' : 'O';\n  }\n\n  ngOnInit(): void {\n    this.socket.emit('joinGame', { gameId: this.gameId, player: this.player });\n    this.updateStatus();\n\n    this.socket.on('gameState', (gameState: any) => {\n      this.board = gameState.board;\n      this.currentTurn = gameState.currentTurn;\n      this.updateStatus();\n    });\n\n    this.socket.on('gameOver', (data: any) => {\n      this.isGameOver = true;\n      if (data.winner) {\n        this.status = data.winner === this.player ? 'You won!' : 'You lost!';\n      } else {\n        this.status = \"It's a draw!\";\n      }\n      \n      // Reset after 2 seconds\n      setTimeout(() => {\n        this.isGameOver = false;\n        this.board = Array(9).fill(null);\n        this.currentTurn = 'X';\n        this.updateStatus();\n      }, 2000);\n    });\n  }\n\n  updateStatus(): void {\n    if (!this.isGameOver) {\n      this.status = this.currentTurn === this.player ? \n        'Your turn!' : \n        \"Opponent's turn!\";\n    }\n  }\n\n  makeMove(index: number): void {\n    if (this.currentTurn === this.player && this.board[index] === null && !this.isGameOver) {\n      this.socket.emit('makeMove', {\n        gameId: this.gameId,\n        index: index,\n        player: this.player\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n} ","<div class=\"game-container\">\n  <h2>Tic Tac Toe</h2>\n  <div class=\"player-info\">\n    <p>You are player: {{ player }}</p>\n    <p>Current turn: {{ currentTurn }}</p>\n  </div>\n  <div class=\"board\">\n    <div *ngFor=\"let cell of board; let i = index\" \n         class=\"cell\" \n         [class.x]=\"cell === 'X'\"\n         [class.o]=\"cell === 'O'\"\n         (click)=\"makeMove(i)\">\n      {{ cell }}\n    </div>\n  </div>\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}