{"ast":null,"code":"import io from 'socket.io-client';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction GameComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.makeMove(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"x\", cell_r1 === \"X\")(\"o\", cell_r1 === \"O\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r1, \" \");\n  }\n}\nexport class GameComponent {\n  constructor() {\n    this.board = Array(9).fill(null);\n    this.currentTurn = 'X';\n    this.status = 'Game in progress';\n    this.gameId = 'default-game';\n    this.player = 'X';\n    console.log('Connecting to socket server at:', environment.apiUrl);\n    this.socket = io(environment.apiUrl, {\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n  }\n  ngOnInit() {\n    this.socket.on('connect', () => {\n      console.log('Connected to socket server');\n      this.status = 'Game in progress';\n      this.joinGame();\n    });\n    this.socket.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n      this.status = 'Connection error. Please check if the server is running.';\n    });\n    this.socket.on('gameState', gameState => {\n      console.log('Received game state:', gameState);\n      this.board = gameState.board;\n      this.currentTurn = gameState.currentTurn;\n    });\n    this.socket.on('gameOver', data => {\n      console.log('Game over:', data);\n      this.status = data.winner ? `Player ${data.winner} wins!` : 'Game is a draw!';\n    });\n  }\n  ngOnDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n  makeMove(index) {\n    console.log('Attempting move at index:', index);\n    if (this.board[index] || this.currentTurn !== this.player) {\n      console.log('Invalid move - cell taken or not your turn');\n      return;\n    }\n    this.socket.emit('makeMove', {\n      gameId: this.gameId,\n      index: index,\n      player: this.player\n    });\n  }\n  newGame() {\n    console.log('Starting new game');\n    this.board = Array(9).fill(null);\n    this.currentTurn = 'X';\n    this.status = 'Game in progress';\n    this.joinGame();\n  }\n  joinGame() {\n    console.log('Joining game:', this.gameId);\n    this.socket.emit('joinGame', {\n      gameId: this.gameId,\n      player: this.player\n    });\n  }\n}\nGameComponent.ɵfac = function GameComponent_Factory(t) {\n  return new (t || GameComponent)();\n};\nGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameComponent,\n  selectors: [[\"app-game\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[1, \"game-container\"], [1, \"status\"], [1, \"board\"], [\"class\", \"cell\", 3, \"x\", \"o\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"info\"], [3, \"click\"], [1, \"cell\", 3, \"click\"]],\n  template: function GameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, GameComponent_div_4_Template, 2, 5, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"p\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function GameComponent_Template_button_click_8_listener() {\n        return ctx.newGame();\n      });\n      i0.ɵɵtext(9, \"New Game\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.status);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.board);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Current Turn: \", ctx.currentTurn, \"\");\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\".game-container[_ngcontent-%COMP%] {\\n      display: flex;\\n      flex-direction: column;\\n      align-items: center;\\n      margin: 20px;\\n    }\\n    .board[_ngcontent-%COMP%] {\\n      display: grid;\\n      grid-template-columns: repeat(3, 1fr);\\n      gap: 5px;\\n      background: #34495e;\\n      padding: 10px;\\n      border-radius: 10px;\\n      width: 300px;\\n      height: 300px;\\n    }\\n    .cell[_ngcontent-%COMP%] {\\n      width: 100%;\\n      height: 100%;\\n      background: #fff;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      font-size: 40px;\\n      font-weight: bold;\\n      cursor: pointer;\\n      border-radius: 5px;\\n      transition: all 0.3s ease;\\n    }\\n    .cell[_ngcontent-%COMP%]:hover {\\n      background: #f0f0f0;\\n      transform: scale(0.98);\\n    }\\n    .cell.x[_ngcontent-%COMP%] {\\n      color: #e74c3c;\\n    }\\n    .cell.o[_ngcontent-%COMP%] {\\n      color: #3498db;\\n    }\\n    .status[_ngcontent-%COMP%] {\\n      margin-bottom: 20px;\\n      font-size: 24px;\\n      font-weight: bold;\\n      color: #2c3e50;\\n    }\\n    .info[_ngcontent-%COMP%] {\\n      margin-top: 20px;\\n      text-align: center;\\n    }\\n    button[_ngcontent-%COMP%] {\\n      padding: 10px 20px;\\n      font-size: 16px;\\n      background: #2ecc71;\\n      color: white;\\n      border: none;\\n      border-radius: 5px;\\n      cursor: pointer;\\n      transition: background-color 0.3s;\\n    }\\n    button[_ngcontent-%COMP%]:hover {\\n      background: #27ae60;\\n    }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQ0k7TUFDRSxhQUFhO01BQ2Isc0JBQXNCO01BQ3RCLG1CQUFtQjtNQUNuQixZQUFZO0lBQ2Q7SUFDQTtNQUNFLGFBQWE7TUFDYixxQ0FBcUM7TUFDckMsUUFBUTtNQUNSLG1CQUFtQjtNQUNuQixhQUFhO01BQ2IsbUJBQW1CO01BQ25CLFlBQVk7TUFDWixhQUFhO0lBQ2Y7SUFDQTtNQUNFLFdBQVc7TUFDWCxZQUFZO01BQ1osZ0JBQWdCO01BQ2hCLGFBQWE7TUFDYixtQkFBbUI7TUFDbkIsdUJBQXVCO01BQ3ZCLGVBQWU7TUFDZixpQkFBaUI7TUFDakIsZUFBZTtNQUNmLGtCQUFrQjtNQUNsQix5QkFBeUI7SUFDM0I7SUFDQTtNQUNFLG1CQUFtQjtNQUNuQixzQkFBc0I7SUFDeEI7SUFDQTtNQUNFLGNBQWM7SUFDaEI7SUFDQTtNQUNFLGNBQWM7SUFDaEI7SUFDQTtNQUNFLG1CQUFtQjtNQUNuQixlQUFlO01BQ2YsaUJBQWlCO01BQ2pCLGNBQWM7SUFDaEI7SUFDQTtNQUNFLGdCQUFnQjtNQUNoQixrQkFBa0I7SUFDcEI7SUFDQTtNQUNFLGtCQUFrQjtNQUNsQixlQUFlO01BQ2YsbUJBQW1CO01BQ25CLFlBQVk7TUFDWixZQUFZO01BQ1osa0JBQWtCO01BQ2xCLGVBQWU7TUFDZixpQ0FBaUM7SUFDbkM7SUFDQTtNQUNFLG1CQUFtQjtJQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC5nYW1lLWNvbnRhaW5lciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBtYXJnaW46IDIwcHg7XG4gICAgfVxuICAgIC5ib2FyZCB7XG4gICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbiAgICAgIGdhcDogNXB4O1xuICAgICAgYmFja2dyb3VuZDogIzM0NDk1ZTtcbiAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgd2lkdGg6IDMwMHB4O1xuICAgICAgaGVpZ2h0OiAzMDBweDtcbiAgICB9XG4gICAgLmNlbGwge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICB9XG4gICAgLmNlbGw6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogI2YwZjBmMDtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OCk7XG4gICAgfVxuICAgIC5jZWxsLngge1xuICAgICAgY29sb3I6ICNlNzRjM2M7XG4gICAgfVxuICAgIC5jZWxsLm8ge1xuICAgICAgY29sb3I6ICMzNDk4ZGI7XG4gICAgfVxuICAgIC5zdGF0dXMge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgY29sb3I6ICMyYzNlNTA7XG4gICAgfVxuICAgIC5pbmZvIHtcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgIGJ1dHRvbiB7XG4gICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjMmVjYzcxO1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzO1xuICAgIH1cbiAgICBidXR0b246aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogIzI3YWU2MDtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["io","environment","i0","GameComponent","constructor","Array","fill","console","log","apiUrl","socket","transports","reconnection","reconnectionAttempts","reconnectionDelay","ngOnInit","on","status","joinGame","error","gameState","board","currentTurn","data","winner","ngOnDestroy","disconnect","makeMove","index","player","emit","gameId","newGame","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/chamma/Desktop/tic-tac-toe-game/frontend/src/app/game/game.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport io from 'socket.io-client';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-game',\n  template: `\n    <div class=\"game-container\">\n      <div class=\"status\">{{ status }}</div>\n      <div class=\"board\">\n        <div *ngFor=\"let cell of board; let i = index\" \n             class=\"cell\"\n             [class.x]=\"cell === 'X'\"\n             [class.o]=\"cell === 'O'\"\n             (click)=\"makeMove(i)\">\n          {{ cell }}\n        </div>\n      </div>\n      <div class=\"info\">\n        <p>Current Turn: {{ currentTurn }}</p>\n        <button (click)=\"newGame()\">New Game</button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .game-container {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      margin: 20px;\n    }\n    .board {\n      display: grid;\n      grid-template-columns: repeat(3, 1fr);\n      gap: 5px;\n      background: #34495e;\n      padding: 10px;\n      border-radius: 10px;\n      width: 300px;\n      height: 300px;\n    }\n    .cell {\n      width: 100%;\n      height: 100%;\n      background: #fff;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 40px;\n      font-weight: bold;\n      cursor: pointer;\n      border-radius: 5px;\n      transition: all 0.3s ease;\n    }\n    .cell:hover {\n      background: #f0f0f0;\n      transform: scale(0.98);\n    }\n    .cell.x {\n      color: #e74c3c;\n    }\n    .cell.o {\n      color: #3498db;\n    }\n    .status {\n      margin-bottom: 20px;\n      font-size: 24px;\n      font-weight: bold;\n      color: #2c3e50;\n    }\n    .info {\n      margin-top: 20px;\n      text-align: center;\n    }\n    button {\n      padding: 10px 20px;\n      font-size: 16px;\n      background: #2ecc71;\n      color: white;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n    }\n    button:hover {\n      background: #27ae60;\n    }\n  `]\n})\nexport class GameComponent implements OnInit, OnDestroy {\n  private socket: any;\n  board: string[] = Array(9).fill(null);\n  currentTurn: string = 'X';\n  status: string = 'Game in progress';\n  gameId: string = 'default-game';\n  player: string = 'X';\n\n  constructor() {\n    console.log('Connecting to socket server at:', environment.apiUrl);\n    this.socket = io(environment.apiUrl, {\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n  }\n\n  ngOnInit() {\n    this.socket.on('connect', () => {\n      console.log('Connected to socket server');\n      this.status = 'Game in progress';\n      this.joinGame();\n    });\n\n    this.socket.on('connect_error', (error: any) => {\n      console.error('Socket connection error:', error);\n      this.status = 'Connection error. Please check if the server is running.';\n    });\n\n    this.socket.on('gameState', (gameState: any) => {\n      console.log('Received game state:', gameState);\n      this.board = gameState.board;\n      this.currentTurn = gameState.currentTurn;\n    });\n\n    this.socket.on('gameOver', (data: any) => {\n      console.log('Game over:', data);\n      this.status = data.winner ? `Player ${data.winner} wins!` : 'Game is a draw!';\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n\n  makeMove(index: number) {\n    console.log('Attempting move at index:', index);\n    if (this.board[index] || this.currentTurn !== this.player) {\n      console.log('Invalid move - cell taken or not your turn');\n      return;\n    }\n\n    this.socket.emit('makeMove', {\n      gameId: this.gameId,\n      index: index,\n      player: this.player\n    });\n  }\n\n  newGame() {\n    console.log('Starting new game');\n    this.board = Array(9).fill(null);\n    this.currentTurn = 'X';\n    this.status = 'Game in progress';\n    this.joinGame();\n  }\n\n  private joinGame() {\n    console.log('Joining game:', this.gameId);\n    this.socket.emit('joinGame', { \n      gameId: this.gameId, \n      player: this.player \n    });\n  }\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}