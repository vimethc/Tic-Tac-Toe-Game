{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction GameComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.makeMove(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"x\", cell_r1 === \"X\")(\"o\", cell_r1 === \"O\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r1, \" \");\n  }\n}\nexport class GameComponent {\n  constructor() {\n    this.board = Array(9).fill(null);\n    this.currentTurn = 'X';\n    this.status = 'Game in progress';\n    this.gameId = 'default-game';\n    this.player = 'X';\n    this.socket = io(environment.apiUrl);\n  }\n  ngOnInit() {\n    this.socket.on('gameState', gameState => {\n      this.board = gameState.board;\n      this.currentTurn = gameState.currentTurn;\n    });\n    this.socket.on('gameOver', data => {\n      this.status = data.winner ? `Player ${data.winner} wins!` : 'Game is a draw!';\n    });\n    this.socket.emit('joinGame', {\n      gameId: this.gameId,\n      player: this.player\n    });\n  }\n  ngOnDestroy() {\n    this.socket.disconnect();\n  }\n  makeMove(index) {\n    if (this.board[index] || this.currentTurn !== this.player) {\n      return;\n    }\n    this.socket.emit('makeMove', {\n      gameId: this.gameId,\n      index: index,\n      player: this.player\n    });\n  }\n  newGame() {\n    this.board = Array(9).fill(null);\n    this.currentTurn = 'X';\n    this.status = 'Game in progress';\n    this.socket.emit('joinGame', {\n      gameId: this.gameId,\n      player: this.player\n    });\n  }\n}\nGameComponent.ɵfac = function GameComponent_Factory(t) {\n  return new (t || GameComponent)();\n};\nGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameComponent,\n  selectors: [[\"app-game\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[1, \"game-container\"], [1, \"status\"], [1, \"board\"], [\"class\", \"cell\", 3, \"x\", \"o\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"info\"], [3, \"click\"], [1, \"cell\", 3, \"click\"]],\n  template: function GameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, GameComponent_div_4_Template, 2, 5, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"p\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function GameComponent_Template_button_click_8_listener() {\n        return ctx.newGame();\n      });\n      i0.ɵɵtext(9, \"New Game\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.status);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.board);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Current Turn: \", ctx.currentTurn, \"\");\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\".game-container[_ngcontent-%COMP%] {\\n      display: flex;\\n      flex-direction: column;\\n      align-items: center;\\n      margin: 20px;\\n    }\\n    .board[_ngcontent-%COMP%] {\\n      display: grid;\\n      grid-template-columns: repeat(3, 1fr);\\n      gap: 5px;\\n      background: #34495e;\\n      padding: 10px;\\n      border-radius: 10px;\\n    }\\n    .cell[_ngcontent-%COMP%] {\\n      width: 100px;\\n      height: 100px;\\n      background: #fff;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      font-size: 40px;\\n      font-weight: bold;\\n      cursor: pointer;\\n      border-radius: 5px;\\n      transition: background-color 0.3s;\\n    }\\n    .cell[_ngcontent-%COMP%]:hover {\\n      background: #f0f0f0;\\n    }\\n    .cell.x[_ngcontent-%COMP%] {\\n      color: #e74c3c;\\n    }\\n    .cell.o[_ngcontent-%COMP%] {\\n      color: #3498db;\\n    }\\n    .status[_ngcontent-%COMP%] {\\n      margin-bottom: 20px;\\n      font-size: 24px;\\n    }\\n    .info[_ngcontent-%COMP%] {\\n      margin-top: 20px;\\n      text-align: center;\\n    }\\n    button[_ngcontent-%COMP%] {\\n      padding: 10px 20px;\\n      font-size: 16px;\\n      background: #2ecc71;\\n      color: white;\\n      border: none;\\n      border-radius: 5px;\\n      cursor: pointer;\\n    }\\n    button[_ngcontent-%COMP%]:hover {\\n      background: #27ae60;\\n    }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQ0k7TUFDRSxhQUFhO01BQ2Isc0JBQXNCO01BQ3RCLG1CQUFtQjtNQUNuQixZQUFZO0lBQ2Q7SUFDQTtNQUNFLGFBQWE7TUFDYixxQ0FBcUM7TUFDckMsUUFBUTtNQUNSLG1CQUFtQjtNQUNuQixhQUFhO01BQ2IsbUJBQW1CO0lBQ3JCO0lBQ0E7TUFDRSxZQUFZO01BQ1osYUFBYTtNQUNiLGdCQUFnQjtNQUNoQixhQUFhO01BQ2IsbUJBQW1CO01BQ25CLHVCQUF1QjtNQUN2QixlQUFlO01BQ2YsaUJBQWlCO01BQ2pCLGVBQWU7TUFDZixrQkFBa0I7TUFDbEIsaUNBQWlDO0lBQ25DO0lBQ0E7TUFDRSxtQkFBbUI7SUFDckI7SUFDQTtNQUNFLGNBQWM7SUFDaEI7SUFDQTtNQUNFLGNBQWM7SUFDaEI7SUFDQTtNQUNFLG1CQUFtQjtNQUNuQixlQUFlO0lBQ2pCO0lBQ0E7TUFDRSxnQkFBZ0I7TUFDaEIsa0JBQWtCO0lBQ3BCO0lBQ0E7TUFDRSxrQkFBa0I7TUFDbEIsZUFBZTtNQUNmLG1CQUFtQjtNQUNuQixZQUFZO01BQ1osWUFBWTtNQUNaLGtCQUFrQjtNQUNsQixlQUFlO0lBQ2pCO0lBQ0E7TUFDRSxtQkFBbUI7SUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAuZ2FtZS1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgbWFyZ2luOiAyMHB4O1xuICAgIH1cbiAgICAuYm9hcmQge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XG4gICAgICBnYXA6IDVweDtcbiAgICAgIGJhY2tncm91bmQ6ICMzNDQ5NWU7XG4gICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICB9XG4gICAgLmNlbGwge1xuICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG4gICAgfVxuICAgIC5jZWxsOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNmMGYwZjA7XG4gICAgfVxuICAgIC5jZWxsLngge1xuICAgICAgY29sb3I6ICNlNzRjM2M7XG4gICAgfVxuICAgIC5jZWxsLm8ge1xuICAgICAgY29sb3I6ICMzNDk4ZGI7XG4gICAgfVxuICAgIC5zdGF0dXMge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICB9XG4gICAgLmluZm8ge1xuICAgICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gICAgYnV0dG9uIHtcbiAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIGJhY2tncm91bmQ6ICMyZWNjNzE7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgIGJ1dHRvbjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjMjdhZTYwO1xuICAgIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,EAAE,QAAgB,kBAAkB;AAC7C,SAASC,WAAW,QAAQ,gCAAgC;;;;;;IAQpDC,8BAI2B;IAAtBA;MAAA;MAAA;MAAA;MAAA,OAASA,oCAAW;IAAA,EAAC;IACxBA,YACF;IAAAA,iBAAM;;;;IAJDA,oCAAwB;IAG3BA,eACF;IADEA,wCACF;;;AAmER,OAAM,MAAOC,aAAa;EAQxBC;IANA,UAAK,GAAaC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACrC,gBAAW,GAAW,GAAG;IACzB,WAAM,GAAW,kBAAkB;IACnC,WAAM,GAAW,cAAc;IAC/B,WAAM,GAAW,GAAG;IAGlB,IAAI,CAACC,MAAM,GAAGP,EAAE,CAACC,WAAW,CAACO,MAAM,CAAC;EACtC;EAEAC,QAAQ;IACN,IAAI,CAACF,MAAM,CAACG,EAAE,CAAC,WAAW,EAAGC,SAAc,IAAI;MAC7C,IAAI,CAACC,KAAK,GAAGD,SAAS,CAACC,KAAK;MAC5B,IAAI,CAACC,WAAW,GAAGF,SAAS,CAACE,WAAW;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACN,MAAM,CAACG,EAAE,CAAC,UAAU,EAAGI,IAAS,IAAI;MACvC,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACE,MAAM,GAAG,UAAUF,IAAI,CAACE,MAAM,QAAQ,GAAG,iBAAiB;IAC/E,CAAC,CAAC;IAEF,IAAI,CAACT,MAAM,CAACU,IAAI,CAAC,UAAU,EAAE;MAAEC,MAAM,EAAE,IAAI,CAACA,MAAM;MAAEC,MAAM,EAAE,IAAI,CAACA;IAAM,CAAE,CAAC;EAC5E;EAEAC,WAAW;IACT,IAAI,CAACb,MAAM,CAACc,UAAU,EAAE;EAC1B;EAEAC,QAAQ,CAACC,KAAa;IACpB,IAAI,IAAI,CAACX,KAAK,CAACW,KAAK,CAAC,IAAI,IAAI,CAACV,WAAW,KAAK,IAAI,CAACM,MAAM,EAAE;MACzD;;IAGF,IAAI,CAACZ,MAAM,CAACU,IAAI,CAAC,UAAU,EAAE;MAC3BC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBK,KAAK,EAAEA,KAAK;MACZJ,MAAM,EAAE,IAAI,CAACA;KACd,CAAC;EACJ;EAEAK,OAAO;IACL,IAAI,CAACZ,KAAK,GAAGP,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAChC,IAAI,CAACO,WAAW,GAAG,GAAG;IACtB,IAAI,CAACE,MAAM,GAAG,kBAAkB;IAChC,IAAI,CAACR,MAAM,CAACU,IAAI,CAAC,UAAU,EAAE;MAAEC,MAAM,EAAE,IAAI,CAACA,MAAM;MAAEC,MAAM,EAAE,IAAI,CAACA;IAAM,CAAE,CAAC;EAC5E;;;mBA9CWhB,aAAa;AAAA;;QAAbA,aAAa;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MA5EtB3B,8BAA4B;MACNA,YAAY;MAAAA,iBAAM;MACtCA,8BAAmB;MACjBA,8DAMM;MACRA,iBAAM;MACNA,8BAAkB;MACbA,YAA+B;MAAAA,iBAAI;MACtCA,iCAA4B;MAApBA;QAAA,OAAS4B,aAAS;MAAA,EAAC;MAAC5B,wBAAQ;MAAAA,iBAAS;;;MAZ3BA,eAAY;MAAZA,gCAAY;MAERA,eAAU;MAAVA,mCAAU;MAS7BA,eAA+B;MAA/BA,4DAA+B","names":["io","environment","i0","GameComponent","constructor","Array","fill","socket","apiUrl","ngOnInit","on","gameState","board","currentTurn","data","status","winner","emit","gameId","player","ngOnDestroy","disconnect","makeMove","index","newGame","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/chamma/Desktop/tic-tac-toe-game/frontend/src/app/game/game.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { io, Socket } from 'socket.io-client';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-game',\n  template: `\n    <div class=\"game-container\">\n      <div class=\"status\">{{ status }}</div>\n      <div class=\"board\">\n        <div *ngFor=\"let cell of board; let i = index\" \n             class=\"cell\"\n             [class.x]=\"cell === 'X'\"\n             [class.o]=\"cell === 'O'\"\n             (click)=\"makeMove(i)\">\n          {{ cell }}\n        </div>\n      </div>\n      <div class=\"info\">\n        <p>Current Turn: {{ currentTurn }}</p>\n        <button (click)=\"newGame()\">New Game</button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .game-container {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      margin: 20px;\n    }\n    .board {\n      display: grid;\n      grid-template-columns: repeat(3, 1fr);\n      gap: 5px;\n      background: #34495e;\n      padding: 10px;\n      border-radius: 10px;\n    }\n    .cell {\n      width: 100px;\n      height: 100px;\n      background: #fff;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 40px;\n      font-weight: bold;\n      cursor: pointer;\n      border-radius: 5px;\n      transition: background-color 0.3s;\n    }\n    .cell:hover {\n      background: #f0f0f0;\n    }\n    .cell.x {\n      color: #e74c3c;\n    }\n    .cell.o {\n      color: #3498db;\n    }\n    .status {\n      margin-bottom: 20px;\n      font-size: 24px;\n    }\n    .info {\n      margin-top: 20px;\n      text-align: center;\n    }\n    button {\n      padding: 10px 20px;\n      font-size: 16px;\n      background: #2ecc71;\n      color: white;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n    }\n    button:hover {\n      background: #27ae60;\n    }\n  `]\n})\nexport class GameComponent implements OnInit, OnDestroy {\n  private socket: Socket;\n  board: string[] = Array(9).fill(null);\n  currentTurn: string = 'X';\n  status: string = 'Game in progress';\n  gameId: string = 'default-game';\n  player: string = 'X';\n\n  constructor() {\n    this.socket = io(environment.apiUrl);\n  }\n\n  ngOnInit() {\n    this.socket.on('gameState', (gameState: any) => {\n      this.board = gameState.board;\n      this.currentTurn = gameState.currentTurn;\n    });\n\n    this.socket.on('gameOver', (data: any) => {\n      this.status = data.winner ? `Player ${data.winner} wins!` : 'Game is a draw!';\n    });\n\n    this.socket.emit('joinGame', { gameId: this.gameId, player: this.player });\n  }\n\n  ngOnDestroy() {\n    this.socket.disconnect();\n  }\n\n  makeMove(index: number) {\n    if (this.board[index] || this.currentTurn !== this.player) {\n      return;\n    }\n\n    this.socket.emit('makeMove', {\n      gameId: this.gameId,\n      index: index,\n      player: this.player\n    });\n  }\n\n  newGame() {\n    this.board = Array(9).fill(null);\n    this.currentTurn = 'X';\n    this.status = 'Game in progress';\n    this.socket.emit('joinGame', { gameId: this.gameId, player: this.player });\n  }\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}